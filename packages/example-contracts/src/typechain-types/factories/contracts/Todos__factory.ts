/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Todos, TodosInterface } from "../../contracts/Todos";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "todo",
        type: "string",
      },
    ],
    name: "addTodo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTodos",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "todos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610af9806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638da5cb5b1461005157806395ffebf51461006f578063bc8bc2b41461008b578063c33926cb146100bb575b600080fd5b6100596100d9565b6040516100669190610389565b60405180910390f35b610089600480360381019061008491906104fe565b6100fd565b005b6100a560048036038101906100a0919061057d565b6101c3565b6040516100b29190610629565b60405180910390f35b6100c361026f565b6040516100d09190610757565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610182906107c5565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190915090816101bf91906109f1565b5050565b600181815481106101d357600080fd5b9060005260206000200160009150905080546101ee90610814565b80601f016020809104026020016040519081016040528092919081815260200182805461021a90610814565b80156102675780601f1061023c57610100808354040283529160200191610267565b820191906000526020600020905b81548152906001019060200180831161024a57829003601f168201915b505050505081565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561033f5783829060005260206000200180546102b290610814565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90610814565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505081526020019060010190610293565b50505050905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037382610348565b9050919050565b61038381610368565b82525050565b600060208201905061039e600083018461037a565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61040b826103c2565b810181811067ffffffffffffffff8211171561042a576104296103d3565b5b80604052505050565b600061043d6103a4565b90506104498282610402565b919050565b600067ffffffffffffffff821115610469576104686103d3565b5b610472826103c2565b9050602081019050919050565b82818337600083830152505050565b60006104a161049c8461044e565b610433565b9050828152602081018484840111156104bd576104bc6103bd565b5b6104c884828561047f565b509392505050565b600082601f8301126104e5576104e46103b8565b5b81356104f584826020860161048e565b91505092915050565b600060208284031215610514576105136103ae565b5b600082013567ffffffffffffffff811115610532576105316103b3565b5b61053e848285016104d0565b91505092915050565b6000819050919050565b61055a81610547565b811461056557600080fd5b50565b60008135905061057781610551565b92915050565b600060208284031215610593576105926103ae565b5b60006105a184828501610568565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105e45780820151818401526020810190506105c9565b60008484015250505050565b60006105fb826105aa565b61060581856105b5565b93506106158185602086016105c6565b61061e816103c2565b840191505092915050565b6000602082019050818103600083015261064381846105f0565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610693826105aa565b61069d8185610677565b93506106ad8185602086016105c6565b6106b6816103c2565b840191505092915050565b60006106cd8383610688565b905092915050565b6000602082019050919050565b60006106ed8261064b565b6106f78185610656565b93508360208202850161070985610667565b8060005b85811015610745578484038952815161072685826106c1565b9450610731836106d5565b925060208a0199505060018101905061070d565b50829750879550505050505092915050565b6000602082019050818103600083015261077181846106e2565b905092915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60006107af6015836105b5565b91506107ba82610779565b602082019050919050565b600060208201905081810360008301526107de816107a2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061082c57607f821691505b60208210810361083f5761083e6107e5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261086a565b6108b1868361086a565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108ee6108e96108e484610547565b6108c9565b610547565b9050919050565b6000819050919050565b610908836108d3565b61091c610914826108f5565b848454610877565b825550505050565b600090565b610931610924565b61093c8184846108ff565b505050565b5b8181101561096057610955600082610929565b600181019050610942565b5050565b601f8211156109a55761097681610845565b61097f8461085a565b8101602085101561098e578190505b6109a261099a8561085a565b830182610941565b50505b505050565b600082821c905092915050565b60006109c8600019846008026109aa565b1980831691505092915050565b60006109e183836109b7565b9150826002028217905092915050565b6109fa826105aa565b67ffffffffffffffff811115610a1357610a126103d3565b5b610a1d8254610814565b610a28828285610964565b600060209050601f831160018114610a5b5760008415610a49578287015190505b610a5385826109d5565b865550610abb565b601f198416610a6986610845565b60005b82811015610a9157848901518255600182019150602085019450602081019050610a6c565b86831015610aae5784890151610aaa601f8916826109b7565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220de60fb2d32b583534a8e9248d5c10dcb23f992a4708b37c39ea576e8103087b764736f6c63430008110033";

type TodosConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodosConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Todos__factory extends ContractFactory {
  constructor(...args: TodosConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Todos> {
    return super.deploy(overrides || {}) as Promise<Todos>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Todos {
    return super.attach(address) as Todos;
  }
  override connect(signer: Signer): Todos__factory {
    return super.connect(signer) as Todos__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodosInterface {
    return new utils.Interface(_abi) as TodosInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Todos {
    return new Contract(address, _abi, signerOrProvider) as Todos;
  }
}
